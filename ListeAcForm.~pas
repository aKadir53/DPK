unit ListeAcForm;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, cxGraphics, cxControls, cxLookAndFeels, cxLookAndFeelPainters,
  cxStyles, cxCustomData, cxFilter, cxData, cxDataStorage, cxEdit, DB,
  cxDBData, cxGridLevel, cxGridCustomTableView, cxGridTableView,
  cxGridDBTableView, cxClasses, cxGridCustomView, cxGrid, StdCtrls,
  ExtCtrls, Buttons, Menus, cxButtons, ImgList, RzButton, dxSkinsCore,
  dxSkinsDefaultPainters, dxSkinscxPCPainter;

type
  TfrmListeAc = class(TForm)
    DataSource1: TDataSource;
    pnlTitle: TPanel;
    pnlOnay: TPanel;
    txtinfo: TLabel;
    ImajListe: TcxImageList;
    btnSec1: TRzBitBtn;
    Liste: TcxGridDBTableView;
    cxGrid1Level1: TcxGridLevel;
    cxGrid1: TcxGrid;
    procedure dizaynEt(Fields,FieldsW,FieldsB : TStrings ; filtercol : integer);
    procedure ListeKeyDown(Sender: TObject; var Key: Word ; Shift: TShiftState);
    procedure KeyPressGridF(Sender: TcxGridDBTableView; var Key: Char ; var arama : string ; colum : integer ; F : Boolean);
    procedure ListeKeyPress(Sender: TObject; var Key: Char);
    procedure FormKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure bntSecClick(Sender: TObject);
    procedure btnSec1Click(Sender: TObject);

  private
    { Private declarations }
  public
     tus : integer;
       { Public declarations }
  end;

var
  frmListeAc: TfrmListeAc;
  arama , aramatext : string;
  Fcol : integer;
  Btus : integer;

implementation
    uses kadirLabel;
{$R *.dfm}

procedure TfrmListeAc.dizaynEt(Fields,FieldsW,FieldsB : TStrings ; filtercol : integer);
var
  colon : TcxGridDBColumn;
  count : integer;
  x : integer;
  field_ : string;
  ListeW : integer;
begin
    Btus := 27;
    Fcol := filterCol;
    count := Fields.Count;
    ListeW := 0;
    for x := 0 to count - 1 do
    begin
       colon := (Liste as TcxGridDBTableView).CreateColumn;
       colon.DataBinding.FieldName := Fields[x];
       try colon.Width := strtoint(FieldsW[x]) except colon.Width := 50 end;
       try colon.Caption := Fieldsb[x] except colon.Caption := '' end;;
       ListeW := ListeW + colon.Width;
    end;


    cxGrid1.Width := ListeW + 10;
    Width := cxGrid1.Width + 10;


end;

procedure TfrmListeAc.ListeKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin

  if key = 13
  Then Begin
    // key := 0;
     btnSec1.Click;
     key := 0;
  End;

  if key = 27
  then Btus := 27;

end;



procedure TfrmListeAc.KeyPressGridF(Sender: TcxGridDBTableView; var Key: Char ; var arama : string ; colum : integer ; F : Boolean);
var
  s : string;
begin
 (*
  if Key  = 'ý' Then Key := 'I';
  if Key  = 'i' Then Key := 'Ý';
   *)
 // s := AnsiUpperCase(key);

  //S := KEY;
  if s[1] in [#13, #10, #9, #14] Then exit;
  //['A'..'Z', '0'..'9', 'Ç','Þ','Ð','Ö','Ü','Ý']

  if (key in [#27,#13])
  Then Begin
     aramaText := '';
     frmListeAc.Caption := aramatext;
    if F = True
    Then Begin
       sender.DataController.Filter.Root.Clear;

    // sender.DataController.Filter.Root.AddItem(sender.Columns[colum],
    // foLike, aramaText+'%' , aramaText);
    End;
    Btus := 27;
     exit;
  End;



  if (key in [#8])
  Then begin

         if (Length(aramaText) > 0)
         Then aramaText := Copy(aramaText, 1, Length(aramaText) - 1)
         else aramaText := '';
           //arama := arama + s;
          if F = True
           Then Begin
           sender.DataController.Filter.Root.Clear;
           
           sender.DataController.Filter.Root.AddItem(sender.Columns[colum],
           foLike, aramaText+'%' , aramaText);
          End;

          frmListeAc.Caption := aramatext;
  end
  else
       aramaText := aramaText + s;
      // sender.DataController.Filter.Root.Clear;
       if F = True
       Then Begin
       sender.DataController.Filter.Options := [fcoCaseInsensitive];
       sender.DataController.Filter.Active := true;
       sender.DataController.Filter.Root.AddItem(sender.Columns[colum],
       foLike, aramaText+'%' , aramaText);
       End;

        frmListeAc.Caption := aramatext;

       s :=arama + '*' + ';*' +arama + '*';

      arama := aramatext;


end;


procedure TfrmListeAc.ListeKeyPress(Sender: TObject; var Key: Char);
begin


   KeyPressGridF(Liste,Key,arama,Fcol,True);

end;

procedure TfrmListeAc.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin

  if Key = 27
  then Begin
    Btus := 27;
//    Liste.ViewData.DataController.FocusedRecordIndex := -1;
    close;
  End;

  if Key = 13
  Then Begin
    // key := 0;
     btnSec1.Click;
     key := 0;
  End;


end;

procedure TfrmListeAc.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  tus := Btus;
  // frmListeAc := nil;
end;

procedure TfrmListeAc.bntSecClick(Sender: TObject);
begin
  aramaText := '';
  arama := '';
  close;
end;

procedure TfrmListeAc.btnSec1Click(Sender: TObject);
begin
  aramaText := '';
  arama := '';
  Btus := 0;
  close;

end;

end.
